package memstream;

import static com.maxeler.maxcompiler.v2.managers.standard.Manager.link;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.managers.BuildConfig;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface.Direction;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.IOLink;
import com.maxeler.maxcompiler.v2.managers.standard.IOLink.IODestination;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;

public class MemStreamManager {
	private static final String[] children_names = {"child_0","child_1","child_2", "child_3", "child_4"};
	public static int EDGE_COUNT = children_names.length;
	private static final String s_kernelName = "MemStreamKernel";

	public static void main(String[] args) {

		MemStreamEngineParameters params = new MemStreamEngineParameters(args);
		Manager manager = new Manager(params);
		Kernel  kernel  = new MemStreamKernel(manager.makeKernelParameters(s_kernelName));
		manager.setKernel(kernel);

		// Input link for all children, then the data_write.
		IOLink[] all_links = new IOLink[EDGE_COUNT+1];
		for(int i=0; i < EDGE_COUNT; i++){
			all_links[i]= link(children_names[i], IODestination.CPU);
		}
		all_links[EDGE_COUNT] = link("data_w", IODestination.CPU);

		manager.setIO(
			all_links
			);

		manager.createSLiCinterface(interfaceDefault());

		configBuild(manager, params);

		manager.build();
	}

	private static EngineInterface interfaceDefault() {
		EngineInterface engine_interface = new EngineInterface();
		CPUTypes   type = CPUTypes.INT32;
		int        manager_size = type.sizeInBytes();

		// We receive 'size' from the function call in CpuCode.c
		InterfaceParam  size    = engine_interface.addParam("size", type);
		// Set kernel to run for 'size' ticks (Number of ticks of the block)
		engine_interface.setTicks(s_kernelName, size);

		// Below we set the parameters for MemStream in the CpuCode.
		for (String name: children_names){
			engine_interface.setStream(name, type, size * manager_size);
		}
		// Output stream
		engine_interface.setStream("data_w", type, size * manager_size);

		engine_interface.ignoreAll(Direction.IN_OUT);
		return engine_interface;
		// These parameters are sent to EngineCode/src/memstream/MemStreamKernel.maxj
	}

	// Don't think we need to change things below.
	private static void configBuild(Manager manager, MemStreamEngineParameters params) {

		manager.setEnableStreamStatusBlocks(false);
		BuildConfig buildConfig = manager.getBuildConfig();
		buildConfig.setMPPRCostTableSearchRange(params.getMPPRStartCT(), params.getMPPREndCT());
		buildConfig.setMPPRParallelism(params.getMPPRThreads());
		buildConfig.setMPPRRetryNearMissesThreshold(params.getMPPRRetryThreshold());
	}
}