package memstream;

import com.maxeler.maxcompiler.v2.kernelcompiler.Kernel;
import com.maxeler.maxcompiler.v2.kernelcompiler.KernelParameters;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEType;
import com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar;

class MemStreamKernel extends Kernel {

	private static final DFEType type = dfeInt(32);

	protected MemStreamKernel(KernelParameters parameters) {
		super(parameters);

		// From the MemStreamManager we get these variables from the stream.
		DFEVar edges = Memory.read(0l);

		DFEVar vertices = io.input("vertices", type);
		DFEVar data_r = io.input("data_r", type);
		DFEVar data_w = io.input("data_w", type);
		DFEVar edge_counter = io.input("edge_counter", type);

		// Do stuff

		// Send back to CPUCode/MemStreamCpuCode.c
		
		io.output("path", children, type);
		io.output("total_steps", total_steps, type);
	}

}
