--altdpram ACF_BLOCK_RAM_AND_MLAB_EQUIVALENT_PAUSED_READ_CAPABILITIES="CARE" ACF_IMPLEMENT_MLAB_IN_16_BIT_DEEP_MODE="FALSE" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Stratix V" INDATA_ACLR="OFF" INDATA_REG="INCLOCK" NUMWORDS=4 OUTDATA_ACLR="OFF" OUTDATA_REG="OUTCLOCK" RAM_BLOCK_TYPE="MLAB" RDADDRESS_ACLR="OFF" RDADDRESS_REG="OUTCLOCK" RDCONTROL_ACLR="OFF" RDCONTROL_REG="UNREGISTERED" WIDTH=1 WIDTHAD=2 WRADDRESS_ACLR="OFF" WRADDRESS_REG="INCLOCK" WRCONTROL_ACLR="OFF" WRCONTROL_REG="INCLOCK" data inclock outclock outclocken q rdaddress wraddress wren CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48 CYCLONEII_M4K_COMPATIBILITY="ON" LOW_POWER_MODE="AUTO"
--VERSION_BEGIN 13.1 cbx_altdpram 2013:10:17:04:07:49:SJ cbx_altsyncram 2013:10:17:04:07:49:SJ cbx_cycloneii 2013:10:17:04:07:49:SJ cbx_lpm_add_sub 2013:10:17:04:07:49:SJ cbx_lpm_compare 2013:10:17:04:07:49:SJ cbx_lpm_decode 2013:10:17:04:07:49:SJ cbx_lpm_mux 2013:10:17:04:07:49:SJ cbx_mgl 2013:10:17:04:34:36:SJ cbx_stratix 2013:10:17:04:07:49:SJ cbx_stratixii 2013:10:17:04:07:49:SJ cbx_stratixiii 2013:10:17:04:07:49:SJ cbx_stratixv 2013:10:17:04:07:49:SJ cbx_util_mgl 2013:10:17:04:07:49:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION stratixv_mlab_cell (clk0, clk1, clr, ena0, ena1, ena2, portaaddr[address_width-1..0], portabyteenamasks[byte_enable_mask_width-1..0], portadatain[data_width-1..0], portbaddr[address_width-1..0])
WITH ( address_width = 1, byte_enable_mask_width = 2, data_width = 1, first_address, first_bit_number, init_file, last_address, logical_ram_depth, logical_ram_name, logical_ram_width, mem_init0, mixed_port_feed_through_mode, port_b_data_out_clear, port_b_data_out_clock)
RETURNS ( portbdataout[data_width-1..0]);

--synthesis_resources = MLAB 1 reg 3 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to rdaddr_reg} PRESERVE_REGISTER=ON";

SUBDESIGN dpram_1nt1
( 
	data[0..0]	:	input;
	inclock	:	input;
	outclock	:	input;
	outclocken	:	input;
	q[0..0]	:	output;
	rdaddress[1..0]	:	input;
	wraddress[1..0]	:	input;
	wren	:	input;
) 
VARIABLE 
	dataout_reg[0..0] : dffe;
	rdaddr_reg[1..0] : dffe;
	lutrama0 : stratixv_mlab_cell
		WITH (
			address_width = 2,
			data_width = 1,
			first_address = 0,
			first_bit_number = 0,
			last_address = 3,
			logical_ram_depth = 4,
			logical_ram_name = "ALTDPRAM_INSTANCE",
			logical_ram_width = 1,
			mixed_port_feed_through_mode = "dont care"
		);
	datain_wire[0..0]	: WIRE;
	dataout_wire[0..0]	: WIRE;
	rdaddr_wire[1..0]	: WIRE;
	wr_en	: WIRE;
	wraddr_wire[1..0]	: WIRE;

BEGIN 
	dataout_reg[].clk = outclock;
	dataout_reg[].d = dataout_wire[];
	dataout_reg[].ena = outclocken;
	rdaddr_reg[].clk = outclock;
	rdaddr_reg[].d = rdaddress[];
	rdaddr_reg[].ena = outclocken;
	lutrama[0..0].clk0 = inclock;
	lutrama[0..0].ena0 = wr_en;
	lutrama[0].portaaddr[1..0] = wraddr_wire[1..0];
	lutrama[0].portadatain[0..0] = datain_wire[0..0];
	lutrama[0].portbaddr[1..0] = rdaddr_wire[1..0];
	datain_wire[] = data[];
	dataout_wire[] = lutrama[0..0].portbdataout[];
	q[] = dataout_reg[].q;
	rdaddr_wire[] = rdaddr_reg[].q;
	wr_en = wren;
	wraddr_wire[] = wraddress[];
END;
--VALID FILE
